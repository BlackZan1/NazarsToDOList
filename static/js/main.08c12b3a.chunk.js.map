{"version":3,"sources":["toDoList/context.js","toDoList/components/ToDoItem.js","toDoList/components/toDoList.jsx","toDoList/components/Loader.js","toDoList/Modal/Modal.jsx","toDoList/App.jsx","index.js"],"names":["context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","fontSize","width","height","margin","textAlign","animationName","animationDuration","animationTimingFunction","div","xbtn","color","alignSelf","checkbox","background","p","ToDoItem","props","onRemoveToggle","useContext","Context","classes","item","complete","push","key","id","style","className","join","type","onChange","checked","index","title","onClick","bind","ul","listStyle","toDoList","todos","map","onChangeToggle","Modal","state","isOpen","Fragment","setState","this","Component","Add","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","res","json","todo","inf","concat","Provider","value","filter","Suspense","fallback","Loader","addToggle","Date","now","length","setInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08c12b3a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet context = React.createContext(null);\r\ndebugger;\r\n\r\nexport default context;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../context.js';\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '10px 20px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '20px',\r\n        fontSize: '16px',\r\n        width: '100%',\r\n        height: 50,\r\n        margin: '15px 0px 20px 0px',\r\n        textAlign: 'left',\r\n        animationName: 'slideInLeft',\r\n        animationDuration: '.7s',\r\n        animationTimingFunction: 'ease-in-out',\r\n    },\r\n    div: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    xbtn: {\r\n        color: 'white',\r\n        borderRadius: 10,\r\n        width: '30px',\r\n        height: '30px',\r\n        alignSelf: 'center',\r\n    },\r\n    checkbox: {\r\n        background: '#fff',\r\n        border: '1px solid #dcdcdc',\r\n        borderRadius: '10px', \r\n    },\r\n    p: {\r\n        margin: '0px 10px 0px 10px',\r\n    }\r\n};\r\n\r\nfunction ToDoItem(props) {\r\n    const { onRemoveToggle } = React.useContext(Context);\r\n    const classes = [];\r\n\r\n    if(props.item.complete) classes.push('done');\r\n\r\n    return (\r\n        <li key={props.id} style={styles.li} className={classes.join(' ')}>\r\n            <div style={styles.div}>\r\n\r\n                <input className='checkbox' type=\"checkbox\" onChange={() => props.onChange(props.item.id)}\r\n                checked={props.item.complete}/>\r\n                &nbsp;\r\n\r\n                <h2>{props.index + 1}</h2>\r\n\r\n                <p style={styles.p}>\r\n                    {props.item.title}\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <button className='del-button' onClick={onRemoveToggle.bind(null, props.item.id)} style={styles.xbtn}>&times;</button>\r\n            </div>\r\n            \r\n        </li>\r\n    );\r\n};\r\n\r\nToDoItem.propTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport Item from './ToDoItem.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst style = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: `0 auto`,\r\n        padding: 0,\r\n        width: `80%`,\r\n    }\r\n}\r\n\r\nconst toDoList = (props) => {\r\n    return (\r\n        <div className='App-List'>\r\n            <ul style={style.ul}>\r\n                {\r\n                    props.todos.map((item, index) => {\r\n                        return <Item key={item.id} id={item.id} item={item} index={index} onChange={props.onChangeToggle}/>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\ntoDoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object),\r\n    onChangeToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default toDoList;","import React from 'react';\r\n\r\nexport default () => (\r\n    <div className=\"App-Loader\">\r\n       <i className=\"fab fa-react\"></i>\r\n    </div>\r\n);","import React from 'react';\r\nimport './Modal.scss';\r\n\r\nclass Modal extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"Modal-btn\" onClick={() => this.setState({ isOpen: true })}>Open</button>\r\n\r\n                {\r\n                    this.state.isOpen && (\r\n                        <div className=\"Modal\">\r\n                            <div className=\"Modal-body\">\r\n                                <div className=\"Modal-text\">\r\n                                    <h1>Цитата Дня</h1>\r\n\r\n                                    <h3>\r\n                                        Никогда нельзя отказываться от мечты! \r\n                                        Мечты питают нашу душу, так же, как пища питает тело. Сколько бы раз в жизни нам ни пришлось пережить крушение и видеть, \r\n                                        как разбиваются наши надежды, \r\n                                        мы все равно должны продолжать мечтать.\r\n                                    </h3>\r\n\r\n                                    <p>-Пауло Коэльо</p>\r\n                                </div>\r\n\r\n                                <button className=\"Modal-btn\" onClick={() => this.setState({ isOpen: false })}>Close</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { useEffect } from 'react';\r\nimport ToDoList from './components/toDoList.jsx';\r\nimport Context from './context.js';\r\nimport Loader from './components/Loader.js';\r\nimport '../index.scss';\r\nimport Modal from './Modal/Modal.jsx';\r\n\r\nconst Add = React.lazy(() => new Promise(resolve => {\r\n    setTimeout(() => {\r\n        resolve(import('./components/AddToDo.jsx'))\r\n    }, 1000)\r\n}))\r\n\r\nconst App = (props) => {\r\n    let [todos, setTodos] = React.useState([]);\r\n    let [loading, setLoading] = React.useState(true)\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n        .then(res => res.json())\r\n        .then(todo => {\r\n\r\n            setTimeout(() => {\r\n                let inf = [\r\n                    {id: 999, complete: false, title: 'Научиться React JS и Redux + Node JS'},\r\n                    {id: 998, complete: false, title: 'Улыбаться'},\r\n                    {id: 997, complete: false, title: 'Спорт'},\r\n                ];\r\n\r\n                setTodos(todos => todos.concat(inf));\r\n                setTodos( todos => todos.concat(todo));\r\n                setLoading(false);\r\n            }, 1500)\r\n            \r\n        })\r\n    }, [])\r\n\r\n    const onChangeToggle = (id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if(id === todo.id) todo.complete = !todo.complete;\r\n\r\n                return todo;\r\n            })\r\n        )\r\n    }\r\n\r\n    const onRemoveToggle = (id) => {\r\n        setTodos(\r\n            todos.filter((todo) => todo.id !== id)\r\n        )\r\n    }\r\n\r\n    const addToggle = (value) => {\r\n        setTodos(\r\n            todos.concat([{\r\n                id: Date.now(),\r\n                title: value,\r\n                complete: false,\r\n            }])\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={ {onRemoveToggle} }>\r\n            <div className='App-Wrapper'>\r\n\r\n                <div className='App-Logo'>\r\n                    <i className=\"fab fa-react\"></i>\r\n                    <h1>React toDo List</h1>\r\n\r\n                    <Modal />\r\n                </div>\r\n\r\n                <React.Suspense fallback={ <Loader/> }>\r\n                    <Add addToggle={addToggle}/>\r\n                </React.Suspense>            \r\n\r\n                {loading && <Loader/>}\r\n                {todos.length ? <ToDoList todos={todos} onChangeToggle={onChangeToggle}/> : loading ? null : <h2>No tasks...</h2>}\r\n                \r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToDolist from './toDoList/App.jsx';\r\nimport './index.scss';\r\n\r\nsetInterval(() => {\r\n    ReactDOM.render( <ToDolist />, document.getElementById('list') );\r\n}, 100)\r\n\r\n\r\n"],"sourceRoot":""}